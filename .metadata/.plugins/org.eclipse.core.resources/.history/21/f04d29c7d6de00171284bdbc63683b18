package controller;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Hyperlink;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import model.Admin;
import model.Database;
import model.Employee;
import model.GUIHelper;
import model.User;
import model.Validation;

public class LoginController extends MainController {
	@FXML
	private Button signInBtn;
	@FXML
	private Hyperlink createAccount;
	@FXML
	private TextField username;
	@FXML
	private TextField password;
	@FXML
	private Label isValidLabel;
	@FXML
	private Button cancelButton;

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
		
		
signInBtn.setDefaultButton(true);
	}

	public void cancelButtonFire(ActionEvent event) {
		Node node = (Node) event.getSource();
		Stage stage = (Stage) node.getScene().getWindow();
		Parent root = null;

		try {
			root = FXMLLoader.load(getClass().getResource("/view/mainView.fxml"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Scene scene = new Scene(root);
		stage.setScene(scene);

	}

	public void signInFire(ActionEvent event) {

		User user = null;
		Employee employee = null;
		
		// Admin admin = (Admin) user;

		// User admin2 = (Admin)user;
		System.out.println("button clicked");

		
		
		
		//if user exists create
		
	if (Validation.isEmployee(username.getText())) {
		employee = (Employee) Database.employeeBag.getEmployeeMap().get(username.getText());
		Database.currentUser.setCurrent(employee);
		
		if (Validation.passwordsMatch(password.getText(), employee.getPassword())) {
			System.out.println("passwords match");
			System.out.println("obj is employee");
			switchView("/view/mainView.fxml", event);
			
		} else {
			isValidLabel.setVisible(true);
		 isValidLabel.setText("*invalid password");
		 GUIHelper.setPause(isValidLabel);
		}
		
	} else {
		isValidLabel.setVisible(true);
		isValidLabel.setText("user not found");
		GUIHelper.setPause(isValidLabel);

	}
	
			// if user exists 
		if (Validation.isUser(username.getText())) {
			user = (User) Database.userBag.getUserMap().get(username.getText());

			if (Validation.passwordsMatch(password.getText(), user.getPassword())) {
				Database.currentUser.setCurrent(user);
				System.out.println("passwords match");
				System.out.println("obj is user");
				Database.userBag.load();
				switchView("/view/mainView.fxml", event);
			} 
			 isValidLabel.setText("user not found");

		}
		 isValidLabel.setText("*invalid password");

		
		if (Validation.isAdmin(username.getText())) {
			System.out.println("this is admin");
			//if admin pw is valid 
			if (Validation.passwordsMatch(password.getText(), Admin.get_Admin().getPassword())) {
				System.out.println("passwords match");
			
			System.out.println("obj is admin");
			System.out.println(Admin.get_Admin());
			
			if (Admin.get_Admin().getPassword().equals("1234")) {
				switchView("/view/adminFirstLogin.fxml", event);
				
			} else {
				
			Database.currentUser.setCurrent(Admin.get_Admin());
			
			Admin.get_Admin().setCurrent(Database.currentUser);
			
			System.out.println("current: " + Admin.get_Admin().getCurrent());

			switchView("/view/mainView.fxml", event);
			}
			
			}
			 isValidLabel.setText("*invalid password");

		}
		 isValidLabel.setText("*user not found");

		}



	public void createAccountFire(ActionEvent event) {
		System.out.println("button clicked");

		Node node = (Node) event.getSource();
		Stage stage = (Stage) node.getScene().getWindow();
		Parent root = null;

		try {
			root = FXMLLoader.load(getClass().getResource("/view/createAccountView.fxml"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Scene scene = new Scene(root);
		stage.setScene(scene);
	}

}
